// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Clipper.ViewModels;
using CoreGraphics;
using Foundation;
using UIKit;

namespace ClipperIOS
{
	public partial class EditingPostViewController : UIViewController
	{
        private AddViewModel addViewModel;

		public List<UIImage> images;
        public List<string> uris;

		public EditingPostViewController (IntPtr handle) : base (handle)
		{
		}
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();



            foreach (var uri in uris)
            {
                var imgView = new UIImageView(
                    new CGRect(scroll.VisibleSize.Width * uris.IndexOf(uri), 0,
                        scroll.VisibleSize.Width, scroll.VisibleSize.Height)
                    );
                imgView.ContentMode = UIViewContentMode.ScaleAspectFit;
                imgView.Image = new UIImage(uri);
                scroll.AddSubview(imgView);
            }
            scroll.ContentSize = new CoreGraphics.CGSize(
                scroll.VisibleSize.Width * images.Count,
                scroll.VisibleSize.Height);

            pageCntrl.Pages = images.Count;


            /*
            foreach (var img in images)
            {
                var imgView = new UIImageView(
                    new CGRect(scroll.VisibleSize.Width * images.IndexOf(img), 0,
                        scroll.VisibleSize.Width, scroll.VisibleSize.Height)
                    );
                imgView.ContentMode = UIViewContentMode.ScaleAspectFit;
                imgView.Image = img;
                scroll.AddSubview(imgView);
            }
            scroll.ContentSize = new CoreGraphics.CGSize(
                scroll.VisibleSize.Width * images.Count,
                scroll.VisibleSize.Height);

            pageCntrl.Pages = images.Count;
            */
            scroll.Scrolled += (s, e) =>
            {
                var sc = s as UIScrollView;
                var offset = sc.ContentOffset.X;

                pageCntrl.CurrentPage = pageCntrl.Pages - ((int)Math.Round(sc.ContentSize.Width / (offset + sc.VisibleSize.Width)));
            };

            backBtn.TouchUpInside += (sender, e) =>
            {
                DismissViewController(false, null);
            };

            postBtn.TouchUpInside += (sender, e) =>
            {
                addViewModel = new AddViewModel();

                addViewModel.Title = txtBelow.Text;
         
                UIImage.SaveStatus status = (im, er) =>
                {
                    Console.WriteLine(im);
                    Console.WriteLine(er);
                };

                foreach(var img in images)
                {
                    string filepath = (NSString)img.ValueForKey((NSString)"filename");
                    var image = new UIImage(filepath);
                    if(img == image)
                        Console.WriteLine("1");
                    else
                        Console.WriteLine("2");
                }
                
                
            };
        }
    }
}
