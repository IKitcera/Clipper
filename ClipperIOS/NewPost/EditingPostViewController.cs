// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Clipper.ViewModels;
using CoreGraphics;
using Foundation;
using UIKit;

namespace ClipperIOS
{
	public partial class EditingPostViewController : UIViewController
	{
        private AddViewModel addViewModel;

        public string userId { get; set; }

		public List<UIImage> images;
        public List<string> uris;

		public EditingPostViewController (IntPtr handle) : base (handle)
		{

		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
      
            foreach (var img in images)
            {
                var imgView = new UIImageView(
                    new CGRect(scroll.VisibleSize.Width * images.IndexOf(img), 0,
                        scroll.VisibleSize.Width, scroll.VisibleSize.Height)
                    );
                imgView.ContentMode = UIViewContentMode.ScaleAspectFit;
                imgView.Image = img;
                scroll.AddSubview(imgView);
            }
            scroll.ContentSize = new CoreGraphics.CGSize(
                scroll.VisibleSize.Width * images.Count,
                scroll.VisibleSize.Height);

            pageCntrl.Pages = images.Count;
            
            scroll.Scrolled += (s, e) =>
            {
                var sc = s as UIScrollView;
                var offset = sc.ContentOffset.X;

                pageCntrl.CurrentPage = pageCntrl.Pages - ((int)Math.Round(sc.ContentSize.Width / (offset + sc.VisibleSize.Width)));
            };

            backBtn.TouchUpInside += (sender, e) =>
            {
                DismissViewController(false, null);
            };

            postBtn.TouchUpInside += (sender, e) => Post();
        }


        private void Post()
        {
            addViewModel = new AddViewModel();

            addViewModel.Title = txtBelow.Text;

            uris = new List<string>();
            foreach (var i in images)
            {
                uris.Add(ImageProcessing.SaveImg(i).ToString());
            }
            addViewModel.Photos = uris;

            var successfully = addViewModel.AddNewPost(userId);

            UIAlertController alert = new UIAlertController();

            if (successfully)
                alert.Message = "You have made a new post successfully !";
            else
                alert.Message = "An error was occured";


            var root = ((MainTabNavController)PresentingViewController);
            var newPostViewController = root.SelectedViewController as NewPostViewController;
            newPostViewController.Reset();
            root.SelectedViewController = root.ViewControllers.Where(vc => vc is MainFlowViewController).FirstOrDefault();

            DismissViewController(false, () => newPostViewController.DismissViewController(false, null));
            // = root.ViewControllers.Where(vc => vc as MainFlowViewController != null).FirstOrDefault();
           
        }
    }
}
